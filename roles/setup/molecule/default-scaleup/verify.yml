---
- name: Converge - Install docker
  hosts: all:!hypervisor
  gather_facts: no
  vars:
    ansible_libvirt_uri: >-
      {% if hostvars[groups['hypervisor'] | first].ansible_connection == 'ssh' %}qemu+ssh://{{ hostvars[groups['hypervisor'] | first].ansible_user }}@{{ hostvars[groups['hypervisor'] | first].ansible_host }}/system{% else %}qemu:///system{% endif %}
    ansible_connection: "community.libvirt.libvirt_qemu"
  become: yes
  serial: "{{ lookup('env', 'ANSIBLE_SERIAL') }}"
  tasks:
    - name: Gather Facts
      ansible.builtin.setup:
        gather_subset:
          - min
          - network
      register: setup_result
      until: setup_result.failed != true
      retries: 10

- name: Get Swarm facts
  hosts: docker_manager
  gather_facts: no
  run_once: yes
  vars:
    ansible_libvirt_uri: >-
      {% if hostvars[groups['hypervisor'] | first].ansible_connection == 'ssh' %}qemu+ssh://{{ hostvars[groups['hypervisor'] | first].ansible_user }}@{{ hostvars[groups['hypervisor'] | first].ansible_host }}/system{% else %}qemu:///system{% endif %}
    ansible_connection: "community.libvirt.libvirt_qemu"
  become: yes
  serial: "{{ lookup('env', 'ANSIBLE_SERIAL') }}"
  tasks:
    - name: "Get Nodes of docker swarm"
      ansible.builtin.shell: "docker node ls --format {%raw%}{{.Hostname}}{%endraw%}"
      register: get_nodes_output
      changed_when: false

    - name: Print swarm node names
      debug:
        var: get_nodes_output.stdout_lines

    - name:
      assert:
        that: get_nodes_output.stdout_lines | length == 5